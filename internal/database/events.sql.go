// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: events.sql

package database

import (
	"context"
	"database/sql"
	"time"

	"github.com/google/uuid"
)

const createEvent = `-- name: CreateEvent :one
INSERT INTO events (id, name, location, date, created_at, updated_at, description, group_id, slug)
VALUES (
    gen_random_uuid(),
    $1,
    $2,
    $3,
    NOW(),
    NOW(),
    $4,
    $5,
    $6
)
RETURNING id, name, location, date, created_at, updated_at, description, group_id, slug
`

type CreateEventParams struct {
	Name        string
	Location    sql.NullString
	Date        time.Time
	Description sql.NullString
	GroupID     uuid.UUID
	Slug        string
}

func (q *Queries) CreateEvent(ctx context.Context, arg CreateEventParams) (Event, error) {
	row := q.db.QueryRowContext(ctx, createEvent,
		arg.Name,
		arg.Location,
		arg.Date,
		arg.Description,
		arg.GroupID,
		arg.Slug,
	)
	var i Event
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Location,
		&i.Date,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Description,
		&i.GroupID,
		&i.Slug,
	)
	return i, err
}
