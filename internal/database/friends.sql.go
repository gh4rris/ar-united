// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: friends.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const getUserFriends = `-- name: GetUserFriends :many
SELECT u.id, u.first_name, u.last_name, u.dob, u.created_at, u.updated_at, u.email, u.hased_password
FROM users AS u
INNER JOIN friends AS f
ON (u.id = f.user_id_a AND f.user_id_b = $1)
OR (u.id = f.user_id_b AND f.user_id_a = $1)
ORDER BY u.first_name ASC
`

func (q *Queries) GetUserFriends(ctx context.Context, userIDB uuid.UUID) ([]User, error) {
	rows, err := q.db.QueryContext(ctx, getUserFriends, userIDB)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []User
	for rows.Next() {
		var i User
		if err := rows.Scan(
			&i.ID,
			&i.FirstName,
			&i.LastName,
			&i.Dob,
			&i.CreatedAt,
			&i.UpdatedAt,
			&i.Email,
			&i.HasedPassword,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
